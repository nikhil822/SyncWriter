// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int             @id @default(autoincrement())
  email             String          @unique
  password          String
  isVerified        Boolean
  verificationToken String?
  passwordResetToken String?
  refreshTokens     RefreshToken[]
  userRoles         UserRole[]
  sharedDocuments   DocumentUser[]
  documents         Document[]
}

model RefreshToken {
  id     Int    @id @default(autoincrement()) 
  token  String
  userId Int
  user   User   @relation(fields: [userId], references: [id])
}

model Role {
  id       Int      @id @default(autoincrement()) 
  name     RoleEnum
  userRoles UserRole[]
}

model UserRole {
  id        Int      @id @default(autoincrement()) 
  userId    Int
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])
}

model Document {
  id        Int           @id @default(autoincrement()) 
  title     String
  content   Json
  userId    Int
  user      User          @relation(fields: [userId], references: [id])
  users     DocumentUser[]
  isPublic  Boolean       @default(false)
}

model DocumentUser {
  id          Int           @id @default(autoincrement()) 
  userId      Int
  documentId  Int
  permission  PermissionEnum
  user        User          @relation(fields: [userId], references: [id])
  document    Document      @relation(fields: [documentId], references: [id])
}

enum RoleEnum {
  ADMIN
  SUPERADMIN
}

enum PermissionEnum {
  VIEW
  EDIT
}